settings:
  evaluation:
    n_repetitions: 20
  random:
    seed: 42

  parallel:
    n_jobs: 4
    backend: joblib

active:
  models: [ "logistic_regression" ]
  datasets: [
    "cifar10",
    "click",
    "covertype",
    "cpu", "diabetes",
    "fmnist_binary",
    "mnist_binary",
    "mnist_multi",
    "phoneme"
  ]
  valuation_methods: [
    "classwise_shapley",
  ]

experiments:
  wad_drop:
  noise_removal:
  wad_drop_transfer:
    transfer_models:
      [ "gradient_boosting_classifier" ]

models:
  logistic_regression: {
    solver: liblinear,
  }
  gradient_boosting_classifier: {
    n_estimators: 40,
    min_samples_leaf: 6,
    max_depth: 2
  }
  knn: {
    n_neighbors: 5,
    weights: uniform
  }
  svm: {
    kernel: rbf
  }
  mlp: {
  }

valuation_methods:
  random: {
    algorithm: "random"
  }
  loo: {
    algorithm: "loo",
    kwargs: {
      progress: False
    }
  }
  classwise_shapley: {
    algorithm: "classwise_shapley",
    kwargs: {
      n_updates: 500,
      normalize_values: True,
      n_resample_complement_sets: 1,
      rtol: 1e-4,
      progress: True
    }
  }
  classwise_shapley_add_idx: {
    algorithm: "classwise_shapley",
    kwargs: {
      n_updates: 500,
      normalize_values: True,
      n_resample_complement_sets: 1,
      use_default_scorer_value: False,
      rtol: 1e-4,
      progress: True
    },
  }
  beta_shapley: {
    algorithm: "beta_shapley",
    kwargs: {
      alpha: 16.0,
      beta: 1.0,
      n_updates: 500,
      progress: False
    }
  }
  tmc_shapley: {
    algorithm: "tmc_shapley",
    kwargs: {
      rtol: 1e-4,
      n_updates: 500,
      progress: False
    }
  }

datasets:
  diabetes: {
    openml_id: 37,
    split: {
      train_size: 128,
      val_size: 128,
      test_size: 512
    }
  }
  cpu: {
    openml_id: 197,
    preprocessor: {
      threshold_y: {
        threshold: 89,
      }
    },
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  click: {
    openml_id: 1216,
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  covertype: {
    openml_id: 1596,
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  phoneme: {
    openml_id: 1489,
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  fmnist_binary: {
    openml_id: 40996,
    filters: {
      binarization: {
        label_zero: "0",
        label_one: "1"
      }
    },
    preprocessor: {
      principal_resnet_components: {
        n_components: 32,
        grayscale: True
      }
    },
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  cifar10: {
    openml_id: 40927,
    filters: {
      binarization: {
        label_zero: "1",
        label_one: "9"
      }
    },
    preprocessor: {
      principal_resnet_components: {
        n_components: 32,
        grayscale: False
      }
    },
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  mnist_binary: {
    openml_id: 554,
    filters: {
      binarization: {
        label_zero: "1",
        label_one: "7"
      }
    },
    preprocessor: {
      principal_resnet_components: {
        n_components: 32,
        grayscale: True
      }
    },
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
  }
  mnist_multi: {
    openml_id: 554,
    split: {
      train_size: 500,
      val_size: 500,
      test_size: 2000,
    },
    preprocessor: {
      principal_resnet_components: {
        n_components: 32,
        grayscale: True
      }
    },
  }